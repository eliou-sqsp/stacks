{
  "dockerEndpoint": "http://localhost:9005/api/",
  "stacks": {
    "core": {
      "name": "core",
      "services": {
        "mongo": {
          "name": "mongo",
          "containerName": "core_mongodb_1",
          "ports": [
            "27017:27017",
            "8083:8083"
          ]
        },
        "consul": {
          "name": "consul",
          "containerName": "core_consul_1",
          "ports": [
            "8500:8500"
          ]
        },
        "warden": {
          "name": "warden",
          "containerName": "core_warden_1",
          "ports": [
            "8060:8080",
            "8061:8081"
          ]
        },
        "redis": {
          "name": "redis",
          "containerName": "core_redis_1",
          "ports": [
            "6379:6379"
          ]
        },
        "zookeeper": {
          "name": "zookeeper",
          "containerName": "core_zookeeper_1",
          "ports": [
            "2181:2181"
          ]
        },
        "rabbitMQ": {
          "name": "rabbitMQ",
          "containerName": "core_rabbitmq_1",
          "ports": [
            "5672:5672",
            "15672:15672"
          ]
        }
      },
      "disabled": false
    },
    "kafka": {
      "name": "kafka",
      "disabled": true,
      "services": {
        "kafka": {
          "name": "kafka",
          "containerName": "kafka_kafka_1",
          "ports": [
            "9092:9092"
          ]
        },
        "kafka-setup": {
          "name": "kafka-setup",
          "containerName": "kafka_kafka-setup_1"
        }
      }
    },
    "serviceMesh": {
      "name": "serviceMesh",
      "services": {
        "discovery": {
          "name": "discovery",
          "containerName": "servicemesh_meshdiscovery_1",
          "ports": [
            "10000:10000",
            "8444:8444"
          ]
        },
        "envoy": {
          "name": "envoy",
          "containerName": "servicemesh_envoy_1",
          "ports": [
            "9002:9002",
            "9901:9901"
          ]
        }
      }
    },
    "oplog": {
      "disabled": true,
      "name": "oplog",
      "services": {
        "schema-registry": {
          "name": "schema-registry",
          "containerName": "oplog_schema-registry_1",
          "ports": [
            "18081:18081"
          ]
        },
        "connect": {
          "name": "connect",
          "containerName": "oplog_connect_1"
        }
      }
    },
    "echo": {
      "name": "echo",
      "disabled": false,
      "services": {
        "echo": {
          "name": "echo",
          "containerName": "echo-local-dev",
          "ports": [
            "20191:20191",
            "20192:20192",
            "20193:20193",
            "20194:20194",
            "20195:20195",
            "80:20193",
            "443:20194"
          ]
        },
        "brickRedis": {
          "name": "brickRedis",
          "containerName": "brick-redis",
          "ports": [
            "20196:6379"
          ]
        }
      }
    },
    "postgres": {
      "disabled": true,
      "name": "postgres",
      "services": {
        "postgres": {
          "name": "postgres",
          "containerName": "postgres",
          "ports": [
            "5432:5432"
          ]
        },
        "postgres_setup": {
          "name": "postgres_setup",
          "containerName": "postgres_setup"
        }
      }
    },
    "search": {
      "disabled": true,
      "name": "search",
      "services": {
        "search": {
          "name": "search",
          "containerName": "search_indexer_service",
          "ports": [
            "38000:38000",
            "38001:38001"
          ]
        }
      }
    },
    "elastic": {
      "name": "elastic",
      "disabled": true,
      "services": {
        "elasticsearch": {
          "name": "elasticsearch",
          "containerName": "elasticsearch_7",
          "ports": [
            "${DEV_ELASTIC_SEARCH_PORT}:9200"
          ]
        }
      }
    },
    "legacy-elastic": {
      "disabled": false,
      "name": "legacy-elastic",
      "services": {
        "elasticsearch": {
          "name": "elasticsearch",
          "containerName": "core_elasticsearch_1",
          "ports": [
            "${DEV_LEGACY_ELASTIC_SEARCH_PORT}:9200",
            "9300:9300"
          ]
        },
        "elasticsearch-setup": {
          "name": "elasticsearch-setup",
          "containerName": "core_elasticsearch_setup"
        }
      }
    }
  }
}